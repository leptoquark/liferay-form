/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.common.themes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.liferay.asset.kernel.model.AssetTag;
import com.liferay.asset.kernel.service.AssetTagServiceUtil;
import com.liferay.exportimport.kernel.staging.LayoutStagingUtil;
import com.liferay.exportimport.kernel.staging.StagingUtil;
import com.liferay.layout.seo.kernel.LayoutSEOLink;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManager;
import com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil;
import com.liferay.petra.string.CharPool;
import com.liferay.petra.string.StringBundler;
import com.liferay.petra.string.StringPool;
import com.liferay.portal.kernel.bean.BeanParamUtil;
import com.liferay.portal.kernel.bean.BeanPropertiesUtil;
import com.liferay.portal.kernel.cal.Recurrence;
import com.liferay.portal.kernel.configuration.Filter;
import com.liferay.portal.kernel.dao.search.DisplayTerms;
import com.liferay.portal.kernel.dao.search.ResultRowSplitter;
import com.liferay.portal.kernel.dao.search.RowChecker;
import com.liferay.portal.kernel.dao.search.RowMover;
import com.liferay.portal.kernel.dao.search.SearchContainer;
import com.liferay.portal.kernel.exception.LocalizedException;
import com.liferay.portal.kernel.exception.NoSuchLayoutException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.language.LanguageUtil;
import com.liferay.portal.kernel.language.LanguageWrapper;
import com.liferay.portal.kernel.language.UnicodeLanguageUtil;
import com.liferay.portal.kernel.layoutconfiguration.util.RuntimePageUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.log.LogUtil;
import com.liferay.portal.kernel.model.*;
import com.liferay.portal.kernel.model.impl.*;
import com.liferay.portal.kernel.model.impl.VirtualLayout;
import com.liferay.portal.kernel.portlet.InvokerPortlet;
import com.liferay.portal.kernel.portlet.LiferayHeaderRequest;
import com.liferay.portal.kernel.portlet.LiferayHeaderResponse;
import com.liferay.portal.kernel.portlet.LiferayPortletMode;
import com.liferay.portal.kernel.portlet.LiferayPortletURL;
import com.liferay.portal.kernel.portlet.LiferayRenderRequest;
import com.liferay.portal.kernel.portlet.LiferayRenderResponse;
import com.liferay.portal.kernel.portlet.LiferayWindowState;
import com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletProvider;
import com.liferay.portal.kernel.portlet.PortletProviderUtil;
import com.liferay.portal.kernel.portlet.PortletSetupUtil;
import com.liferay.portal.kernel.portlet.PortletURLFactoryUtil;
import com.liferay.portal.kernel.portlet.PortletURLUtil;
import com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil;
import com.liferay.portal.kernel.security.auth.AuthTokenUtil;
import com.liferay.portal.kernel.security.auth.PrincipalException;
import com.liferay.portal.kernel.security.permission.ActionKeys;
import com.liferay.portal.kernel.security.permission.ResourceActionsUtil;
import com.liferay.portal.kernel.service.*;
import com.liferay.portal.kernel.service.permission.GroupPermissionUtil;
import com.liferay.portal.kernel.service.permission.LayoutPermissionUtil;
import com.liferay.portal.kernel.service.permission.PortletPermissionUtil;
import com.liferay.portal.kernel.service.permission.RolePermissionUtil;
import com.liferay.portal.kernel.servlet.BrowserSnifferUtil;
import com.liferay.portal.kernel.servlet.BufferCacheServletResponse;
import com.liferay.portal.kernel.servlet.MultiSessionMessages;
import com.liferay.portal.kernel.servlet.PortalMessages;
import com.liferay.portal.kernel.servlet.PortalWebResourceConstants;
import com.liferay.portal.kernel.servlet.PortalWebResourcesUtil;
import com.liferay.portal.kernel.servlet.ServletContextPool;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.servlet.taglib.ui.MenuItem;
import com.liferay.portal.kernel.template.StringTemplateResource;
import com.liferay.portal.kernel.theme.ThemeDisplay;
import com.liferay.portal.kernel.util.ArrayUtil;
import com.liferay.portal.kernel.util.CalendarFactoryUtil;
import com.liferay.portal.kernel.util.CalendarUtil;
import com.liferay.portal.kernel.util.Constants;
import com.liferay.portal.kernel.util.ContentTypes;
import com.liferay.portal.kernel.util.CookieKeys;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.FastDateFormatConstants;
import com.liferay.portal.kernel.util.FastDateFormatFactoryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.HashMapBuilder;
import com.liferay.portal.kernel.util.HtmlUtil;
import com.liferay.portal.kernel.util.Http;
import com.liferay.portal.kernel.util.HttpUtil;
import com.liferay.portal.kernel.util.IntegerWrapper;
import com.liferay.portal.kernel.util.JavaConstants;
import com.liferay.portal.kernel.util.KeyValuePair;
import com.liferay.portal.kernel.util.ListUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.Portal;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.PortletKeys;
import com.liferay.portal.kernel.util.PropsKeys;
import com.liferay.portal.kernel.util.ReleaseInfo;
import com.liferay.portal.kernel.util.ServerDetector;
import com.liferay.portal.kernel.util.SessionClicks;
import com.liferay.portal.kernel.util.SetUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.TextFormatter;
import com.liferay.portal.kernel.util.Time;
import com.liferay.portal.kernel.util.TimeZoneUtil;
import com.liferay.portal.kernel.util.URLCodec;
import com.liferay.portal.kernel.util.UnicodeFormatter;
import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.util.WebKeys;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.impl.*;
import com.liferay.portal.plugin.PluginUtil;
import com.liferay.portal.security.sso.SSOUtil;
import com.liferay.portal.service.*;
import com.liferay.portal.struts.Definition;
import com.liferay.portal.struts.StrutsUtil;
import com.liferay.portal.struts.TilesUtil;
import com.liferay.portal.util.PrefsPropsUtil;
import com.liferay.portal.util.PropsUtil;
import com.liferay.portal.util.PropsValues;
import com.liferay.portal.util.ShutdownUtil;
import com.liferay.portlet.HeaderRequestFactory;
import com.liferay.portlet.HeaderResponseFactory;
import com.liferay.portlet.LiferayPortletUtil;
import com.liferay.portlet.RenderParametersPool;
import com.liferay.portlet.RenderRequestFactory;
import com.liferay.portlet.RenderResponseFactory;
import com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil;
import com.liferay.sites.kernel.util.Sites;
import com.liferay.taglib.search.ResultRow;
import com.liferay.taglib.search.SearchEntry;
import com.liferay.taglib.search.TextSearchEntry;
import com.liferay.taglib.util.OutputTag;
import com.liferay.users.admin.kernel.util.UsersAdmin;
import com.liferay.users.admin.kernel.util.UsersAdminUtil;
import java.io.Serializable;
import java.text.DateFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.TimeZone;
import java.util.TreeSet;
import javax.portlet.MimeResponse;
import javax.portlet.MutableRenderParameters;
import javax.portlet.PortletConfig;
import javax.portlet.PortletContext;
import javax.portlet.PortletException;
import javax.portlet.PortletMode;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.PortletURL;
import javax.portlet.ResourceURL;
import javax.portlet.UnavailableException;
import javax.portlet.WindowState;
import com.liferay.portal.kernel.model.Portlet;
import com.liferay.portal.kernel.model.portlet.PortletDependency;
import com.liferay.portal.kernel.servlet.BrowserMetadata;
import com.liferay.portal.kernel.upload.UploadServletRequestConfigurationHelperUtil;
import com.liferay.portal.servlet.ComboServletStaticURLGenerator;
import com.liferay.portal.util.LayoutTypeAccessPolicyTracker;
import com.liferay.portlet.PortletResourceAccessor;
import com.liferay.portlet.PortletResourceStaticURLGenerator;
import com.liferay.portlet.internal.RenderStateUtil;
import com.liferay.taglib.aui.ScriptTag;
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Predicate;

public final class top_005fhead_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


private static String _getDateFormatPattern(Locale locale) {
	String languageId = LocaleUtil.toLanguageId(locale);

	String dateFormatPattern = _dateFormatPatterns.get(languageId);

	if (dateFormatPattern == null) {
		boolean endDelimiter = false;

		String delimiterString = StringPool.FORWARD_SLASH;

		SimpleDateFormat simpleDateFormat = (SimpleDateFormat)DateFormat.getDateInstance(DateFormat.SHORT, locale);

		dateFormatPattern = simpleDateFormat.toPattern();

		for (char dateDelimiter : _DATE_DELIMITERS) {
			if (dateFormatPattern.indexOf(dateDelimiter) != -1) {
				delimiterString = String.valueOf(dateDelimiter);

				endDelimiter = dateFormatPattern.endsWith(delimiterString);

				break;
			}
		}

		int dayOrder = dateFormatPattern.indexOf('d');
		int monthOrder = dateFormatPattern.indexOf('M');
		int yearOrder = dateFormatPattern.indexOf('y');

		if ((yearOrder < dayOrder) && (yearOrder < monthOrder)) {
			dateFormatPattern = StringBundler.concat("%Y", delimiterString, "%m", delimiterString, "%d");
		}
		else if (dayOrder < monthOrder) {
			dateFormatPattern = StringBundler.concat("%d", delimiterString, "%m", delimiterString, "%Y");
		}
		else {
			dateFormatPattern = StringBundler.concat("%m", delimiterString, "%d", delimiterString, "%Y");
		}

		if (endDelimiter) {
			dateFormatPattern += delimiterString;
		}

		_dateFormatPatterns.put(languageId, dateFormatPattern);
	}

	return dateFormatPattern;
}

private static final char[] _DATE_DELIMITERS = {
	CharPool.DASH, CharPool.FORWARD_SLASH, CharPool.PERIOD
};

private static final Map<String, String> _dateFormatPatterns = new ConcurrentHashMap<>();


private static final String _BOTTOM_KEY = "bottom";

private static final String _LEFT_KEY = "left";

private static final String _RIGHT_KEY = "right";

private static final String _SAME_FOR_ALL_KEY = "sameForAll";

private static final String _TOP_KEY = "top";

private static final String _UNIT_KEY = "unit";

private static final String _VALUE_KEY = "value";

private static final Set _unitSet = new HashSet();

static {
	_unitSet.add("%");
	_unitSet.add("em");
	_unitSet.add("px");
}


private String _escapeCssBlock(String css) {
	return StringUtil.replace(css, new String[] {"<", "expression("}, new String[] {"\\3c", ""});
}

private static final Log _log = LogFactoryUtil.getLog("portal_web.docroot.html.common.themes.top_head_jsp");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(11);
    _jspx_dependants.put("/html/common/themes/top_meta-ext.jsp", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/top_portlet_resources_js.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/top_meta.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/top_js.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/top_js-ext.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/portlet_resources.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/init.jsp", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/portlet_css.jspf", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/init-ext.jsp", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/init.jsp", Long.valueOf(1627474107000L));
    _jspx_dependants.put("/html/common/themes/top_portlet_resources_css.jspf", Long.valueOf(1627474107000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model.impl");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.liferay.portal.kernel.model");
    _jspx_imports_packages.add("com.liferay.portal.model.impl");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.liferay.portal.kernel.service");
    _jspx_imports_packages.add("com.liferay.portal.service");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ContentTypes");
    _jspx_imports_classes.add("com.liferay.portlet.RenderRequestFactory");
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("java.text.Format");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowMover");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalMessages");
    _jspx_imports_classes.add("com.liferay.portlet.PortletResourceStaticURLGenerator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.WebKeys");
    _jspx_imports_classes.add("com.liferay.portal.servlet.ComboServletStaticURLGenerator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.theme.ThemeDisplay");
    _jspx_imports_classes.add("com.liferay.portal.kernel.workflow.WorkflowConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.RolePermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.PrincipalException");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.liferay.taglib.util.OutputTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PropsKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.GetterUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayWindowState");
    _jspx_imports_classes.add("com.liferay.users.admin.kernel.util.UsersAdminUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.portlet.PortletDependency");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.CalendarUtil");
    _jspx_imports_classes.add("javax.portlet.PortletContext");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.ServletContextPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.InvokerPortlet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SessionClicks");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("com.liferay.portal.util.PropsValues");
    _jspx_imports_classes.add("javax.portlet.PortletConfig");
    _jspx_imports_classes.add("java.io.Serializable");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.JavaConstants");
    _jspx_imports_classes.add("com.liferay.taglib.search.TextSearchEntry");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderResponseFactory");
    _jspx_imports_classes.add("com.liferay.portlet.LiferayPortletUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProviderUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HashMapBuilder");
    _jspx_imports_classes.add("com.liferay.petra.string.StringPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.URLCodec");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.CookieKeys");
    _jspx_imports_classes.add("com.liferay.portal.plugin.PluginUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("javax.portlet.MimeResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletPreferencesFactoryUtil");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("java.util.TreeSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatConstants");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.PortalException");
    _jspx_imports_classes.add("java.util.LinkedHashMap");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionMessages");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.PortletPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portlet.PortletResourceAccessor");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ActionKeys");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.SearchContainer");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TimeZoneUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderRequest");
    _jspx_imports_classes.add("com.liferay.portlet.internal.RenderStateUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourcesUtil");
    _jspx_imports_classes.add("java.util.LinkedHashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanPropertiesUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletConfigFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.SessionErrors");
    _jspx_imports_classes.add("com.liferay.portlet.RenderParametersPool");
    _jspx_imports_classes.add("javax.portlet.MutableRenderParameters");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portletdisplaytemplate.PortletDisplayTemplateManagerUtil");
    _jspx_imports_classes.add("javax.portlet.PortletPreferences");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManager");
    _jspx_imports_classes.add("com.liferay.taglib.search.SearchEntry");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Portal");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONObject");
    _jspx_imports_classes.add("com.liferay.users.admin.kernel.util.UsersAdmin");
    _jspx_imports_classes.add("com.liferay.portal.util.LayoutTypeAccessPolicyTracker");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.ResultRowSplitter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ArrayUtil");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLinkManagerUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.StagingUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.cal.Recurrence");
    _jspx_imports_classes.add("com.liferay.petra.string.CharPool");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.permission.ResourceActionsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONArray");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.LayoutPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.configuration.Filter");
    _jspx_imports_classes.add("com.liferay.portal.security.sso.SSOUtil");
    _jspx_imports_classes.add("com.liferay.petra.string.StringBundler");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HtmlUtil");
    _jspx_imports_classes.add("javax.portlet.PortletURL");
    _jspx_imports_classes.add("com.liferay.asset.kernel.service.AssetTagServiceUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.TextFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.taglib.ui.MenuItem");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.LocalizedException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.bean.BeanParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.ShutdownUtil");
    _jspx_imports_classes.add("com.liferay.portal.util.PrefsPropsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.LogUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.NoSuchLayoutException");
    _jspx_imports_classes.add("com.liferay.taglib.aui.ScriptTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.MultiSessionMessages");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.liferay.portlet.HeaderRequestFactory");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Constants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ReleaseInfo");
    _jspx_imports_classes.add("com.liferay.portal.struts.StrutsUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BrowserMetadata");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.DisplayTerms");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocaleUtil");
    _jspx_imports_classes.add("javax.portlet.UnavailableException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.PortalWebResourceConstants");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Time");
    _jspx_imports_classes.add("java.util.TimeZone");
    _jspx_imports_classes.add("java.util.function.Predicate");
    _jspx_imports_classes.add("java.util.concurrent.ConcurrentHashMap");
    _jspx_imports_classes.add("com.liferay.portal.kernel.template.StringTemplateResource");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortalUtil");
    _jspx_imports_classes.add("javax.portlet.PortletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Validator");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.Portlet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.UnicodeLanguageUtil");
    _jspx_imports_classes.add("com.liferay.exportimport.kernel.staging.LayoutStagingUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.StringUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeProperties");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.PortletKeys");
    _jspx_imports_classes.add("com.liferay.taglib.search.ResultRow");
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ServerDetector");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.LocalizationUtil");
    _jspx_imports_classes.add("javax.portlet.WindowState");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ListUtil");
    _jspx_imports_classes.add("com.liferay.portlet.RenderResponseFactory");
    _jspx_imports_classes.add("com.liferay.layout.seo.kernel.LayoutSEOLink");
    _jspx_imports_classes.add("com.liferay.portal.kernel.language.LanguageWrapper");
    _jspx_imports_classes.add("com.liferay.portal.kernel.security.auth.AuthTokenUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.UnicodeFormatter");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayRenderRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.SetUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.Definition");
    _jspx_imports_classes.add("com.liferay.portal.kernel.model.impl.VirtualLayout");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.liferay.portal.kernel.layoutconfiguration.util.RuntimePageUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.IntegerWrapper");
    _jspx_imports_classes.add("com.liferay.portal.kernel.log.Log");
    _jspx_imports_classes.add("javax.portlet.PortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.KeyValuePair");
    _jspx_imports_classes.add("java.util.HashSet");
    _jspx_imports_classes.add("com.liferay.portal.kernel.exception.SystemException");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletProvider");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.FastDateFormatFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.CalendarFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.dao.search.RowChecker");
    _jspx_imports_classes.add("javax.portlet.PortletRequest");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.ParamUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletSetupUtil");
    _jspx_imports_classes.add("com.liferay.portal.struts.TilesUtil");
    _jspx_imports_classes.add("javax.portlet.ResourceURL");
    _jspx_imports_classes.add("com.liferay.portal.kernel.upload.UploadServletRequestConfigurationHelperUtil");
    _jspx_imports_classes.add("com.liferay.sites.kernel.util.Sites");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.liferay.asset.kernel.model.AssetTag");
    _jspx_imports_classes.add("com.liferay.portal.kernel.json.JSONFactoryUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.service.permission.GroupPermissionUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.Http");
    _jspx_imports_classes.add("com.liferay.portlet.configuration.kernel.util.PortletConfigurationUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayPortletMode");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BufferCacheServletResponse");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.DateUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.util.HttpUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.servlet.BrowserSnifferUtil");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.LiferayHeaderResponse");
    _jspx_imports_classes.add("java.util.Collections");
    _jspx_imports_classes.add("com.liferay.portal.kernel.portlet.PortletURLFactoryUtil");
    _jspx_imports_classes.add("javax.portlet.PortletException");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
      //  liferay-theme:defineObjects
      com.liferay.taglib.theme.DefineObjectsTag _jspx_th_liferay_002dtheme_005fdefineObjects_005f0 = new com.liferay.taglib.theme.DefineObjectsTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0);
      try {
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
        _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setParent(null);
        int _jspx_eval_liferay_002dtheme_005fdefineObjects_005f0 = _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doStartTag();
        if (_jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0, _jsp_getInstanceManager(), false);
      }
      com.liferay.portal.kernel.theme.ThemeDisplay themeDisplay = null;
      com.liferay.portal.kernel.model.Company company = null;
      com.liferay.portal.kernel.model.Account account = null;
      com.liferay.portal.kernel.model.User user = null;
      com.liferay.portal.kernel.model.User realUser = null;
      com.liferay.portal.kernel.model.Contact contact = null;
      com.liferay.portal.kernel.model.Layout layout = null;
      java.util.List layouts = null;
      java.lang.Long plid = null;
      com.liferay.portal.kernel.model.LayoutTypePortlet layoutTypePortlet = null;
      java.lang.Long scopeGroupId = null;
      com.liferay.portal.kernel.security.permission.PermissionChecker permissionChecker = null;
      java.util.Locale locale = null;
      java.util.TimeZone timeZone = null;
      com.liferay.portal.kernel.model.Theme theme = null;
      com.liferay.portal.kernel.model.ColorScheme colorScheme = null;
      com.liferay.portal.kernel.theme.PortletDisplay portletDisplay = null;
      java.lang.Long portletGroupId = null;
      themeDisplay = (com.liferay.portal.kernel.theme.ThemeDisplay) _jspx_page_context.findAttribute("themeDisplay");
      company = (com.liferay.portal.kernel.model.Company) _jspx_page_context.findAttribute("company");
      account = (com.liferay.portal.kernel.model.Account) _jspx_page_context.findAttribute("account");
      user = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("user");
      realUser = (com.liferay.portal.kernel.model.User) _jspx_page_context.findAttribute("realUser");
      contact = (com.liferay.portal.kernel.model.Contact) _jspx_page_context.findAttribute("contact");
      layout = (com.liferay.portal.kernel.model.Layout) _jspx_page_context.findAttribute("layout");
      layouts = (java.util.List) _jspx_page_context.findAttribute("layouts");
      plid = (java.lang.Long) _jspx_page_context.findAttribute("plid");
      layoutTypePortlet = (com.liferay.portal.kernel.model.LayoutTypePortlet) _jspx_page_context.findAttribute("layoutTypePortlet");
      scopeGroupId = (java.lang.Long) _jspx_page_context.findAttribute("scopeGroupId");
      permissionChecker = (com.liferay.portal.kernel.security.permission.PermissionChecker) _jspx_page_context.findAttribute("permissionChecker");
      locale = (java.util.Locale) _jspx_page_context.findAttribute("locale");
      timeZone = (java.util.TimeZone) _jspx_page_context.findAttribute("timeZone");
      theme = (com.liferay.portal.kernel.model.Theme) _jspx_page_context.findAttribute("theme");
      colorScheme = (com.liferay.portal.kernel.model.ColorScheme) _jspx_page_context.findAttribute("colorScheme");
      portletDisplay = (com.liferay.portal.kernel.theme.PortletDisplay) _jspx_page_context.findAttribute("portletDisplay");
      portletGroupId = (java.lang.Long) _jspx_page_context.findAttribute("portletGroupId");
      out.write('\n');
      out.write('\n');
      out.write("\n\n\n\n");
      out.write('\n');
      out.write("\n\n<meta content=\"");
      out.print( ContentTypes.TEXT_HTML_UTF8 );
      out.write("\" http-equiv=\"content-type\" />\n\n");

int refreshRate = ParamUtil.getInteger(request, "refresh_rate");

      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f0 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f0);
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /html/common/themes/top_meta.jspf(23,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest( refreshRate > 0 );
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t<meta content=\"");
          out.print( refreshRate );
          out.write(";\" http-equiv=\"refresh\" />\n");
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');

String cacheControl = request.getParameter("cache_control");

      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f1 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f1);
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /html/common/themes/top_meta.jspf(31,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest( (cacheControl != null) && cacheControl.equals("0") );
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t<meta content=\"no-cache\" http-equiv=\"cache-control\" />\n\t<meta content=\"no-cache\" http-equiv=\"pragma\" />\n\t<meta content=\"0\" http-equiv=\"expires\" />\n");
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dtheme_005fmeta_002dtags_005f0(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f0(_jspx_page_context))
        return;
      out.write("\n\n<link href=\"");
      out.print( themeDisplay.getPathThemeImages() );
      out.write('/');
      out.print( PropsValues.THEME_SHORTCUT_ICON );
      out.write("\" rel=\"icon\" />\n\n");
      out.write("\n\n<link class=\"lfr-css-file\" data-senna-track=\"temporary\" href=\"");
      out.print( HtmlUtil.escapeAttribute(PortalUtil.getStaticResourceURL(request, themeDisplay.getPathThemeCss() + "/clay.css")) );
      out.write("\" id=\"liferayAUICSS\" rel=\"stylesheet\" type=\"text/css\" />\n\n");

long cssLastModifiedTime = PortalWebResourcesUtil.getLastModified(PortalWebResourceConstants.RESOURCE_TYPE_CSS);

      out.write("\n\n<link data-senna-track=\"temporary\" href=\"");
      out.print( HtmlUtil.escapeAttribute(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + PortalWebResourcesUtil.getContextPath(PortalWebResourceConstants.RESOURCE_TYPE_CSS) + "/main.css", cssLastModifiedTime)) );
      out.write("\" id=\"liferayPortalCSS\" rel=\"stylesheet\" type=\"text/css\" />\n\n");

List<Portlet> portlets = null;

if (layoutTypePortlet != null) {
	portlets = layoutTypePortlet.getAllPortlets();
}

if (layout != null) {
	String ppid = ParamUtil.getString(request, "p_p_id");

	if ((layout.isTypeEmbedded() || layout.isTypePortlet()) && (themeDisplay.isStateMaximized() || themeDisplay.isStatePopUp() || (layout.isSystem() && Objects.equals(layout.getFriendlyURL(), PropsValues.CONTROL_PANEL_LAYOUT_FRIENDLY_URL)))) {
		if (Validator.isNotNull(ppid)) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), ppid);

			if ((portlet != null) && !portlets.contains(portlet)) {
				portlets.add(portlet);
			}
		}
	}
	else if (layout.isTypeControlPanel() || layout.isTypePanel()) {
		portlets = new ArrayList<Portlet>();

		portlets.addAll(layout.getEmbeddedPortlets());

		if (Validator.isNotNull(ppid)) {
			Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), ppid);

			if ((portlet != null) && !portlets.contains(portlet)) {
				portlets.add(portlet);
			}
		}
	}

	String portletResource = ParamUtil.getString(request, PortalUtil.getPortletNamespace(ppid) + "portletResource");

	if (Validator.isNotNull(portletResource)) {
		Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), portletResource);

		if ((portlet != null) && !portlets.contains(portlet)) {
			portlets.add(portlet);
		}
	}

	Iterator<Portlet> portletsIterator = portlets.iterator();

	LayoutTypeAccessPolicy layoutTypeAccessPolicy = LayoutTypeAccessPolicyTracker.getLayoutTypeAccessPolicy(layout);

	while (portletsIterator.hasNext()) {
		Portlet portlet = portletsIterator.next();

		try {
			layoutTypeAccessPolicy.checkAccessAllowedToPortlet(request, layout, portlet);
		}
		catch (PrincipalException pe) {
			portletsIterator.remove();
		}
	}

	request.setAttribute(WebKeys.LAYOUT_PORTLETS, portlets);
}

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f2 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f2);
      try {
        _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f2.setParent(null);
        // /html/common/themes/top_portlet_resources_css.jspf(17,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f2.setTest( (portlets != null) && !portlets.isEmpty() );
        int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
        if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('\n');
          out.write('	');

	PortletResourceAccessor[] portletResourceAccessors = {PortletResourceAccessor.HEADER_PORTAL_CSS, PortletResourceAccessor.HEADER_PORTLET_CSS};
	Predicate<String> predicate = s -> true;
	boolean useComboServletStaticURLGenerator = themeDisplay.isThemeCssFastLoad();
	
          out.write('\n');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('\n');

List<String> urls = new ArrayList<String>();

          out.write('\n');
          out.write('\n');
          //  c:if
          com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f3 = new com.liferay.taglib.core.IfTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f3);
          try {
            _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
            _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
            // /html/common/themes/portlet_resources.jspf(21,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fif_005f3.setTest( (portlets != null) && !portlets.isEmpty() );
            int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
            if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write('\n');
              out.write('\n');
              out.write('	');

	Set<String> portletResourceStaticURLs = (Set<String>)request.getAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS);

	if (portletResourceStaticURLs == null) {
		portletResourceStaticURLs = new LinkedHashSet<String>();

		request.setAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS, portletResourceStaticURLs);
	}

	if (useComboServletStaticURLGenerator) {
		ComboServletStaticURLGenerator comboServletStaticURLGenerator = new ComboServletStaticURLGenerator();

		comboServletStaticURLGenerator.setPortletResourceAccessors(portletResourceAccessors);
		comboServletStaticURLGenerator.setPredicate(predicate);
		comboServletStaticURLGenerator.setTimestamp(theme.getTimestamp());
		comboServletStaticURLGenerator.setURLPrefix(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + themeDisplay.getPathContext() + "/combo", "minifierType=&themeId=" + themeDisplay.getThemeId(), -1));
		comboServletStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		urls.addAll(comboServletStaticURLGenerator.generate(portlets));
	}
	else {
		PortletResourceStaticURLGenerator portletResourceStaticURLGenerator = new PortletResourceStaticURLGenerator();

		portletResourceStaticURLGenerator.setRequest(request);
		portletResourceStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		for (Portlet curPortlet : portlets) {
			urls.addAll(portletResourceStaticURLGenerator.generate(curPortlet, portletResourceAccessors));
		}
	}
	
              out.write('\n');
              out.write('\n');
            }
            if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('\n');
          out.write('	');

	for (String url : urls) {
	
          out.write("\n\n\t\t<link data-senna-track=\"temporary\" href=\"");
          out.print( HtmlUtil.escapeAttribute(url) );
          out.write("\" id=\"");
          out.print( HtmlUtil.escapeAttribute(StringUtil.toHexString(url.hashCode())) );
          out.write("\" rel=\"stylesheet\" type=\"text/css\" />\n\n\t");

	}
	
          out.write('\n');
          out.write('\n');
        }
        if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n\n<script data-senna-track=\"temporary\" type=\"text/javascript\">\n\t// <![CDATA[\n\t\tvar Liferay = Liferay || {};\n\n\t\tLiferay.Browser = {\n\t\t\tacceptsGzip: function() {\n\t\t\t\treturn ");
      out.print( BrowserSnifferUtil.acceptsGzip(request) );
      out.write(";\n\t\t\t},\n\n\t\t\t");

			String version = BrowserSnifferUtil.getVersion(request);

			String majorVersion = version;

			if (version.isEmpty()) {
				majorVersion = "0";
			}
			
      out.write("\n\n\t\t\tgetMajorVersion: function() {\n\t\t\t\treturn ");
      out.print( majorVersion );
      out.write(";\n\t\t\t},\n\n\t\t\tgetRevision: function() {\n\t\t\t\treturn '");
      out.print( BrowserSnifferUtil.getRevision(request) );
      out.write("';\n\t\t\t},\n\t\t\tgetVersion: function() {\n\t\t\t\treturn '");
      out.print( version );
      out.write("';\n\t\t\t},\n\n\t\t\t");

			BrowserMetadata browserMetadata = BrowserSnifferUtil.getBrowserMetadata(request);
			
      out.write("\n\n\t\t\tisAir: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isAir() );
      out.write(";\n\t\t\t},\n\t\t\tisChrome: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isChrome() );
      out.write(";\n\t\t\t},\n\t\t\tisEdge: function() {\n\t\t\t\treturn ");
      out.print( BrowserSnifferUtil.isEdge(request) );
      out.write(";\n\t\t\t},\n\t\t\tisFirefox: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isFirefox() );
      out.write(";\n\t\t\t},\n\t\t\tisGecko: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isGecko() );
      out.write(";\n\t\t\t},\n\t\t\tisIe: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isIe() );
      out.write(";\n\t\t\t},\n\t\t\tisIphone: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isIphone() );
      out.write(";\n\t\t\t},\n\t\t\tisLinux: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isLinux() );
      out.write(";\n\t\t\t},\n\t\t\tisMac: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isMac() );
      out.write(";\n\t\t\t},\n\t\t\tisMobile: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isMobile() );
      out.write(";\n\t\t\t},\n\t\t\tisMozilla: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isMozilla() );
      out.write(";\n\t\t\t},\n\t\t\tisOpera: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isOpera() );
      out.write(";\n\t\t\t},\n\t\t\tisRtf: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isRtf(version) );
      out.write(";\n\t\t\t},\n\t\t\tisSafari: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isSafari() );
      out.write(";\n\t\t\t},\n\t\t\tisSun: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isSun() );
      out.write(";\n\t\t\t},\n\t\t\tisWebKit: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isWebKit() );
      out.write(";\n\t\t\t},\n\t\t\tisWindows: function() {\n\t\t\t\treturn ");
      out.print( browserMetadata.isWindows() );
      out.write(";\n\t\t\t}\n\t\t};\n\n\t\tLiferay.Data = Liferay.Data || {};\n\n\t\tLiferay.Data.ICONS_INLINE_SVG = true;\n\n\t\tLiferay.Data.NAV_SELECTOR = '#navigation';\n\n\t\tLiferay.Data.NAV_SELECTOR_MOBILE = '#navigationCollapse';\n\n\t\tLiferay.Data.isCustomizationView = function() {\n\t\t\treturn ");
      out.print( layoutTypePortlet.isCustomizable() && LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.CUSTOMIZE) );
      out.write(";\n\t\t};\n\n\t\tLiferay.Data.notices = [\n\t\t\t");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f4 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f4);
      try {
        _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f4.setParent(null);
        // /html/common/themes/top_js.jspf(117,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f4.setTest( permissionChecker.isOmniadmin() && PortalUtil.isUpdateAvailable() );
        int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
        if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t\t{\n\t\t\t\t\tmessage: '<a class=\"update-available\" href=\"");
          out.print( themeDisplay.getURLUpdateManager() );
          out.write('"');
          out.write('>');
          if (_jspx_meth_liferay_002dui_005fmessage_005f0(_jspx_th_c_005fif_005f4, _jspx_page_context))
            return;
          out.write("</a>'\n\t\t\t\t},\n\t\t\t");
        }
        if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), false);
      }
      out.write("\n\n\t\t\t");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f5 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f5);
      try {
        _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f5.setParent(null);
        // /html/common/themes/top_js.jspf(123,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f5.setTest( ShutdownUtil.isInProcess() );
        int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
        if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t\t{\n\t\t\t\t\ttitle: '");
          if (_jspx_meth_liferay_002dui_005fmessage_005f1(_jspx_th_c_005fif_005f5, _jspx_page_context))
            return;
          out.write(" <span class=\"notice-date\">");
          out.print( FastDateFormatFactoryUtil.getTime(locale).format(Time.getDate(CalendarFactoryUtil.getCalendar(timeZone))) );
          out.write(' ');
          out.print( timeZone.getDisplayName(false, TimeZone.SHORT, locale) );
          out.write("</span>',\n\t\t\t\t\tmessage: '");
          //  liferay-ui:message
          com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f2 = new com.liferay.taglib.ui.MessageTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f2);
          try {
            _jspx_th_liferay_002dui_005fmessage_005f2.setPageContext(_jspx_page_context);
            _jspx_th_liferay_002dui_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f5);
            // /html/common/themes/top_js.jspf(126,15) name = arguments type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_liferay_002dui_005fmessage_005f2.setArguments( String.valueOf((ShutdownUtil.getInProcess() / Time.MINUTE) + 1) );
            // /html/common/themes/top_js.jspf(126,15) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_liferay_002dui_005fmessage_005f2.setKey("the-portal-will-shutdown-for-maintenance-in-x-minutes");
            // /html/common/themes/top_js.jspf(126,15) name = translateArguments type = boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_liferay_002dui_005fmessage_005f2.setTranslateArguments( false );
            int _jspx_eval_liferay_002dui_005fmessage_005f2 = _jspx_th_liferay_002dui_005fmessage_005f2.doStartTag();
            if (_jspx_th_liferay_002dui_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f2, _jsp_getInstanceManager(), false);
          }
          out.write("'\n\t\t\t\t\t\t");
          //  c:if
          com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f6 = new com.liferay.taglib.core.IfTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f6);
          try {
            _jspx_th_c_005fif_005f6.setPageContext(_jspx_page_context);
            _jspx_th_c_005fif_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f5);
            // /html/common/themes/top_js.jspf(127,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fif_005f6.setTest( Validator.isNotNull(ShutdownUtil.getMessage()) );
            int _jspx_eval_c_005fif_005f6 = _jspx_th_c_005fif_005f6.doStartTag();
            if (_jspx_eval_c_005fif_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\t\t\t\t\t\t\t+ '<span class=\"custom-shutdown-message\">");
              out.print( HtmlUtil.escape(ShutdownUtil.getMessage()) );
              out.write("</span>'\n\t\t\t\t\t\t");
            }
            if (_jspx_th_c_005fif_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f6, _jsp_getInstanceManager(), false);
          }
          out.write(",\n\t\t\t\t\ttype: 'warning'\n\t\t\t\t},\n\t\t\t");
        }
        if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), false);
      }
      out.write("\n\t\t];\n\n\t\t(function () {\n\t\t\tvar available = {};\n\n\t\t\tvar direction = {};\n\n\t\t\t");

			for (Locale curLocale : LanguageUtil.getAvailableLocales()) {
				String selLanguageId = LocaleUtil.toLanguageId(curLocale);
			
      out.write("\n\n\t\t\t\tavailable['");
      out.print( selLanguageId );
      out.write("'] = '");
      out.print( HtmlUtil.escapeJS(curLocale.getDisplayName(locale)) );
      out.write("';\n\t\t\t\tdirection['");
      out.print( selLanguageId );
      out.write("'] = '");
      out.print( LanguageUtil.get(curLocale, "lang.dir") );
      out.write("';\n\n\t\t\t");

			}
			
      out.write("\n\n\t\t\tLiferay.Language = {\n\t\t\t\tavailable,\n\t\t\t\tdirection,\n\t\t\t\tget: function(key) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t};\n\t\t})();\n\n\t\tLiferay.PortletKeys = {\n\t\t\tDOCUMENT_LIBRARY: '");
      out.print( PortletKeys.DOCUMENT_LIBRARY );
      out.write("',\n\t\t\tDYNAMIC_DATA_MAPPING: 'com_liferay_dynamic_data_mapping_web_portlet_DDMPortlet',\n\t\t\tITEM_SELECTOR: '");
      out.print( PortletKeys.ITEM_SELECTOR );
      out.write("'\n\t\t};\n\n\t\tLiferay.PropsValues = {\n\t\t\tJAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT: ");
      out.print( PrefsPropsUtil.getInteger(themeDisplay.getCompanyId(), PropsKeys.JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT, PropsValues.JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT) );
      out.write(",\n\t\t\tNTLM_AUTH_ENABLED: ");
      out.print( PrefsPropsUtil.getBoolean(themeDisplay.getCompanyId(), PropsKeys.NTLM_AUTH_ENABLED, PropsValues.NTLM_AUTH_ENABLED) );
      out.write(",\n\t\t\tUPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE: ");
      out.print( UploadServletRequestConfigurationHelperUtil.getMaxSize() );
      out.write("\n\t\t};\n\n\t\tLiferay.ThemeDisplay = {\n\n\t\t\t");

			Group scopeGroup = themeDisplay.getScopeGroup();

			Group liveGroup = StagingUtil.getLiveGroup(scopeGroup);
			
      out.write("\n\n\t\t\t");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f7 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f7);
      try {
        _jspx_th_c_005fif_005f7.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f7.setParent(null);
        // /html/common/themes/top_js.jspf(181,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f7.setTest( layout != null );
        int _jspx_eval_c_005fif_005f7 = _jspx_th_c_005fif_005f7.doStartTag();
        if (_jspx_eval_c_005fif_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t\tgetLayoutId: function() {\n\t\t\t\t\treturn '");
          out.print( layout.getLayoutId() );
          out.write("';\n\t\t\t\t},\n\n\t\t\t\t");

				Layout controlPanelLayout = themeDisplay.getControlPanelLayout();
				
          out.write("\n\n\t\t\t\tgetLayoutRelativeControlPanelURL: function() {\n\t\t\t\t\treturn '");
          out.print( PortalUtil.getLayoutRelativeURL(new VirtualLayout(controlPanelLayout, scopeGroup), themeDisplay) );
          out.write("';\n\t\t\t\t},\n\n\t\t\t\tgetLayoutRelativeURL: function() {\n\t\t\t\t\treturn '");
          out.print( PortalUtil.getLayoutRelativeURL(layout, themeDisplay) );
          out.write("';\n\t\t\t\t},\n\t\t\t\tgetLayoutURL: function() {\n\t\t\t\t\treturn '");
          out.print( PortalUtil.getLayoutURL(layout, themeDisplay) );
          out.write("';\n\t\t\t\t},\n\t\t\t\tgetParentLayoutId: function() {\n\t\t\t\t\treturn '");
          out.print( layout.getParentLayoutId() );
          out.write("';\n\t\t\t\t},\n\t\t\t\tisControlPanel: function() {\n\t\t\t\t\treturn ");
          out.print( layout.isTypeControlPanel() );
          out.write(";\n\t\t\t\t},\n\t\t\t\tisPrivateLayout: function() {\n\t\t\t\t\treturn '");
          out.print( layout.isPrivateLayout() );
          out.write("';\n\t\t\t\t},\n\t\t\t\tisVirtualLayout: function() {\n\t\t\t\t\treturn ");
          out.print( layout instanceof VirtualLayout );
          out.write(";\n\t\t\t\t},\n\t\t\t");
        }
        if (_jspx_th_c_005fif_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f7, _jsp_getInstanceManager(), false);
      }
      out.write("\n\n\t\t\tgetBCP47LanguageId: function() {\n\t\t\t\treturn '");
      out.print( LanguageUtil.getBCP47LanguageId(request) );
      out.write("';\n\t\t\t},\n\t\t\tgetCanonicalURL: function() {\n\n\t\t\t\t");

				LayoutSEOLinkManager layoutSEOLinkManager = LayoutSEOLinkManagerUtil.getLayoutSEOLinkManager();

				String completeURL = PortalUtil.getCurrentCompleteURL(request);

				String canonicalURL = PortalUtil.getCanonicalURL(completeURL, themeDisplay, layout, false, false);

				LayoutSEOLink layoutSEOLink = layoutSEOLinkManager.getCanonicalLayoutSEOLink(layout, themeDisplay.getLocale(), canonicalURL, PortalUtil.getAlternateURLs(canonicalURL, themeDisplay, layout));
				
      out.write("\n\n\t\t\t\treturn '");
      out.print( HtmlUtil.escapeJS(layoutSEOLink.getHref()) );
      out.write("';\n\t\t\t},\n\t\t\tgetCDNBaseURL: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getCDNBaseURL() );
      out.write("';\n\t\t\t},\n\t\t\tgetCDNDynamicResourcesHost: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getCDNDynamicResourcesHost() );
      out.write("';\n\t\t\t},\n\t\t\tgetCDNHost: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getCDNHost() );
      out.write("';\n\t\t\t},\n\t\t\tgetCompanyGroupId: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getCompanyGroupId() );
      out.write("';\n\t\t\t},\n\t\t\tgetCompanyId: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getCompanyId() );
      out.write("';\n\t\t\t},\n\t\t\tgetDefaultLanguageId: function() {\n\t\t\t\treturn '");
      out.print( LocaleUtil.toLanguageId(themeDisplay.getSiteDefaultLocale()) );
      out.write("';\n\t\t\t},\n\t\t\tgetDoAsUserIdEncoded: function() {\n\t\t\t\treturn '");
      out.print( UnicodeFormatter.toString(themeDisplay.getDoAsUserId()) );
      out.write("';\n\t\t\t},\n\t\t\tgetLanguageId: function() {\n\t\t\t\treturn '");
      out.print( LanguageUtil.getLanguageId(request) );
      out.write("';\n\t\t\t},\n\t\t\tgetParentGroupId: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getSiteGroupId() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathContext: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathContext() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathImage: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathImage() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathJavaScript: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathJavaScript() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathMain: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathMain() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathThemeImages: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathThemeImages() );
      out.write("';\n\t\t\t},\n\t\t\tgetPathThemeRoot: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathThemeRoot() );
      out.write("';\n\t\t\t},\n\t\t\tgetPlid: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPlid() );
      out.write("';\n\t\t\t},\n\t\t\tgetPortalURL: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPortalURL() );
      out.write("';\n\t\t\t},\n\t\t\tgetScopeGroupId: function() {\n\t\t\t\treturn '");
      out.print( scopeGroup.getGroupId() );
      out.write("';\n\t\t\t},\n\t\t\tgetScopeGroupIdOrLiveGroupId: function() {\n\t\t\t\treturn '");
      out.print( liveGroup.getGroupId() );
      out.write("';\n\t\t\t},\n\t\t\tgetSessionId: function() {\n\t\t\t\treturn '");
      out.print( PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID ? session.getId() : StringPool.BLANK );
      out.write("';\n\t\t\t},\n\t\t\tgetSiteAdminURL: function() {\n\t\t\t\treturn '");
      out.print( PortalUtil.getSiteAdminURL(themeDisplay, StringPool.BLANK, null) );
      out.write("';\n\t\t\t},\n\t\t\tgetSiteGroupId: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getSiteGroupId() );
      out.write("';\n\t\t\t},\n\t\t\tgetURLControlPanel: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getURLControlPanel() );
      out.write("';\n\t\t\t},\n\t\t\tgetURLHome: function() {\n\t\t\t\treturn '");
      out.print( HtmlUtil.escapeJS(themeDisplay.getURLHome()) );
      out.write("';\n\t\t\t},\n\t\t\tgetUserEmailAddress: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.isSignedIn() ? HtmlUtil.escapeJS(user.getEmailAddress()) : StringPool.BLANK );
      out.write("';\n\t\t\t},\n\t\t\tgetUserId: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getUserId() );
      out.write("';\n\t\t\t},\n\t\t\tgetUserName: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.isSignedIn() ? UnicodeFormatter.toString(user.getFullName()) : StringPool.BLANK );
      out.write("';\n\t\t\t},\n\t\t\tisAddSessionIdToURL: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isAddSessionIdToURL() );
      out.write(";\n\t\t\t},\n\t\t\tisImpersonated: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isImpersonated() );
      out.write(";\n\t\t\t},\n\t\t\tisSignedIn: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isSignedIn() );
      out.write(";\n\t\t\t},\n\t\t\tisStateExclusive: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isStateExclusive() );
      out.write(";\n\t\t\t},\n\t\t\tisStateMaximized: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isStateMaximized() );
      out.write(";\n\t\t\t},\n\t\t\tisStatePopUp: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isStatePopUp() );
      out.write(";\n\t\t\t}\n\t\t};\n\n\t\tvar themeDisplay = Liferay.ThemeDisplay;\n\n\t\tLiferay.AUI = {\n\n\t\t\t");

			long jsLastModified = PortalWebResourcesUtil.getLastModified(PortalWebResourceConstants.RESOURCE_TYPE_JS);
			
      out.write("\n\n\t\t\tgetCombine: function() {\n\t\t\t\treturn ");
      out.print( themeDisplay.isThemeJsFastLoad() );
      out.write(";\n\t\t\t},\n\t\t\tgetComboPath: function() {\n\t\t\t\treturn '");
      out.print( PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + themeDisplay.getPathContext() + "/combo/", "minifierType=", jsLastModified) );
      out.write("&';\n\t\t\t},\n\t\t\tgetDateFormat: function() {\n\t\t\t\treturn '");
      out.print( _getDateFormatPattern(locale) );
      out.write("';\n\t\t\t},\n\t\t\tgetEditorCKEditorPath: function() {\n\t\t\t\treturn '");
      out.print( PortalWebResourcesUtil.getContextPath(PortalWebResourceConstants.RESOURCE_TYPE_EDITOR_CKEDITOR) );
      out.write("';\n\t\t\t},\n\t\t\tgetFilter: function() {\n\t\t\t\tvar filter = 'raw';\n\n\t\t\t\t");
      //  c:choose
      com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f0 = new com.liferay.taglib.core.ChooseTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f0);
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t\t\t");
          //  c:when
          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f0 = new com.liferay.taglib.core.WhenTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f0);
          try {
            _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
            _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
            // /html/common/themes/top_js.jspf(356,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fwhen_005f0.setTest( themeDisplay.isThemeJsFastLoad() );
            int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
            if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\t\t\t\t\t\tfilter = 'min';\n\t\t\t\t\t");
            }
            if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), false);
          }
          out.write("\n\t\t\t\t\t");
          //  c:when
          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f1 = new com.liferay.taglib.core.WhenTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f1);
          try {
            _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
            _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
            // /html/common/themes/top_js.jspf(359,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fwhen_005f1.setTest( PropsValues.JAVASCRIPT_LOG_ENABLED );
            int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
            if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\t\t\t\t\t\tfilter = 'debug';\n\t\t\t\t\t");
            }
            if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), false);
          }
          out.write("\n\t\t\t\t");
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), false);
      }
      out.write("\n\n\t\t\t\treturn filter;\n\t\t\t},\n\t\t\tgetFilterConfig: function() {\n\t\t\t\tvar instance = this;\n\n\t\t\t\tvar filterConfig = null;\n\n\t\t\t\tif (!instance.getCombine()) {\n\t\t\t\t\tfilterConfig = {\n\t\t\t\t\t\treplaceStr: '.js' + instance.getStaticResourceURLParams(),\n\t\t\t\t\t\tsearchExp: '\\\\.js$'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn filterConfig;\n\t\t\t},\n\t\t\tgetJavaScriptRootPath: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathJavaScript() );
      out.write("';\n\t\t\t},\n\t\t\tgetPortletRootPath: function() {\n\t\t\t\treturn '");
      out.print( themeDisplay.getPathContext() );
      out.write("/html/portlet';\n\t\t\t},\n\t\t\tgetStaticResourceURLParams: function() {\n\t\t\t\treturn '");
      out.print( PortalUtil.getStaticResourceURL(request, StringPool.BLANK, "minifierType=", jsLastModified) );
      out.write("';\n\t\t\t}\n\t\t};\n\n\t\tLiferay.authToken = '");
      out.print( AuthTokenUtil.getToken(request) );
      out.write("';\n\n\t\t");

		String currentURL = PortalUtil.getCurrentURL(request);
		
      out.write("\n\n\t\tLiferay.currentURL = '");
      out.print( HtmlUtil.escapeJS(currentURL) );
      out.write("';\n\t\tLiferay.currentURLEncoded = '");
      out.print( HtmlUtil.escapeJS(URLCodec.encodeURL(currentURL)) );
      out.write("';\n\t// ]]>\n</script>\n\n");
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f1(_jspx_page_context))
        return;
      out.write("\n\n<script data-senna-track=\"temporary\" type=\"text/javascript\">\n\t// <![CDATA[\n\t\t");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f8 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f8);
      try {
        _jspx_th_c_005fif_005f8.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f8.setParent(null);
        // /html/common/themes/top_js.jspf(406,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f8.setTest( layoutTypePortlet != null );
        int _jspx_eval_c_005fif_005f8 = _jspx_th_c_005fif_005f8.doStartTag();
        if (_jspx_eval_c_005fif_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t");
          //  c:choose
          com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f1 = new com.liferay.taglib.core.ChooseTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f1);
          try {
            _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
            _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f8);
            int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
            if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\t\t\t\t");
              //  c:when
              com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f2 = new com.liferay.taglib.core.WhenTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f2);
              try {
                _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
                _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
                // /html/common/themes/top_js.jspf(408,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fwhen_005f2.setTest( layoutTypePortlet.hasStateMax() );
                int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
                if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t\tLiferay.Portlet.register('");
                  out.print( HtmlUtil.escapeJS(layoutTypePortlet.getStateMaxPortletId()) );
                  out.write("');\n\t\t\t\t");
                }
                if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), false);
              }
              out.write("\n\t\t\t\t");
              //  c:when
              com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f3 = new com.liferay.taglib.core.WhenTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f3);
              try {
                _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
                _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
                // /html/common/themes/top_js.jspf(411,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fwhen_005f3.setTest( themeDisplay.isStatePopUp() );
                int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
                if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t\tLiferay.Portlet.register('");
                  out.print( HtmlUtil.escapeJS(themeDisplay.getPpid()) );
                  out.write("');\n\t\t\t\t");
                }
                if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), false);
              }
              out.write("\n\t\t\t");
            }
            if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('	');
          out.write('	');
        }
        if (_jspx_th_c_005fif_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f8, _jsp_getInstanceManager(), false);
      }
      out.write("\n\n\t\t");

		Group group = null;

		if (layout != null) {
			group = layout.getGroup();
		}
		
      out.write("\n\n\t\t");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f9 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f9);
      try {
        _jspx_th_c_005fif_005f9.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f9.setParent(null);
        // /html/common/themes/top_js.jspf(425,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f9.setTest( themeDisplay.isSignedIn() );
        int _jspx_eval_c_005fif_005f9 = _jspx_th_c_005fif_005f9.doStartTag();
        if (_jspx_eval_c_005fif_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t\t\t");
          //  c:choose
          com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f2 = new com.liferay.taglib.core.ChooseTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f2);
          try {
            _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
            _jspx_th_c_005fchoose_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f9);
            int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
            if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\t\t\t\t");
              //  c:when
              com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f4 = new com.liferay.taglib.core.WhenTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f4);
              try {
                _jspx_th_c_005fwhen_005f4.setPageContext(_jspx_page_context);
                _jspx_th_c_005fwhen_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
                // /html/common/themes/top_js.jspf(427,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fwhen_005f4.setTest( (group != null) && group.isControlPanel() && !LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.UPDATE) && !(layoutTypePortlet.isCustomizable() && layoutTypePortlet.isCustomizedView() && LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.CUSTOMIZE)) );
                int _jspx_eval_c_005fwhen_005f4 = _jspx_th_c_005fwhen_005f4.doStartTag();
                if (_jspx_eval_c_005fwhen_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t\tLiferay._editControlsState = 'visible';\n\t\t\t\t");
                }
                if (_jspx_th_c_005fwhen_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f4, _jsp_getInstanceManager(), false);
              }
              out.write("\n\t\t\t\t");
              //  c:otherwise
              com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = new com.liferay.taglib.core.OtherwiseTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f0);
              try {
                _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
                _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
                int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
                if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t\tLiferay._editControlsState = '");
                  out.print( HtmlUtil.escapeJS(GetterUtil.getString(SessionClicks.get(request, "com.liferay.frontend.js.web_toggleControls", "visible"), "visible")) );
                  out.write("';\n\t\t\t\t");
                }
                if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), false);
              }
              out.write("\n\t\t\t");
            }
            if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('	');
          out.write('	');
        }
        if (_jspx_th_c_005fif_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f9, _jsp_getInstanceManager(), false);
      }
      out.write("\n\t// ]]>\n</script>\n\n");
      out.write('\n');
      out.write('\n');

UnicodeProperties groupTypeSettings = group.getTypeSettingsProperties();

String[] analyticsTypes = PrefsPropsUtil.getStringArray(company.getCompanyId(), PropsKeys.ADMIN_ANALYTICS_TYPES, StringPool.NEW_LINE);

for (String analyticsType : analyticsTypes) {

      out.write('\n');
      out.write('\n');
      out.write('	');
      //  c:choose
      com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f3 = new com.liferay.taglib.core.ChooseTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f3);
      try {
        _jspx_th_c_005fchoose_005f3.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f3.setParent(null);
        int _jspx_eval_c_005fchoose_005f3 = _jspx_th_c_005fchoose_005f3.doStartTag();
        if (_jspx_eval_c_005fchoose_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('	');
          out.write('	');
          //  c:when
          com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f5 = new com.liferay.taglib.core.WhenTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f5);
          try {
            _jspx_th_c_005fwhen_005f5.setPageContext(_jspx_page_context);
            _jspx_th_c_005fwhen_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
            // /html/common/themes/top_js.jspf(449,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fwhen_005f5.setTest( StringUtil.equalsIgnoreCase(analyticsType, "google") );
            int _jspx_eval_c_005fwhen_005f5 = _jspx_th_c_005fwhen_005f5.doStartTag();
            if (_jspx_eval_c_005fwhen_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\n\t\t\t");

			String googleAnalyticsId = groupTypeSettings.getProperty("googleAnalyticsId");
			
              out.write("\n\n\t\t\t");
              //  c:if
              com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f10 = new com.liferay.taglib.core.IfTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f10);
              try {
                _jspx_th_c_005fif_005f10.setPageContext(_jspx_page_context);
                _jspx_th_c_005fif_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f5);
                // /html/common/themes/top_js.jspf(455,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fif_005f10.setTest( Validator.isNotNull(googleAnalyticsId) );
                int _jspx_eval_c_005fif_005f10 = _jspx_th_c_005fif_005f10.doStartTag();
                if (_jspx_eval_c_005fif_005f10 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t<script data-senna-track=\"permanent\" id=\"googleAnalyticsScript\" type=\"text/javascript\">\n\t\t\t\t\t(function(i, s, o, g, r, a, m) {\n\t\t\t\t\t\ti['GoogleAnalyticsObject'] = r;\n\n\t\t\t\t\t\ti[r] = i[r] || function() {\n\t\t\t\t\t\t\tvar arrayValue = i[r].q || [];\n\n\t\t\t\t\t\t\ti[r].q = arrayValue;\n\n\t\t\t\t\t\t\t(i[r].q).push(arguments);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\ti[r].l = 1 * new Date();\n\n\t\t\t\t\t\ta = s.createElement(o);\n\t\t\t\t\t\tm = s.getElementsByTagName(o)[0];\n\t\t\t\t\t\ta.async = 1;\n\t\t\t\t\t\ta.src = g;\n\t\t\t\t\t\tm.parentNode.insertBefore(a, m);\n\t\t\t\t\t})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\n\t\t\t\t\t");

					String googleAnalyticsCreateCustomConfiguration = groupTypeSettings.getProperty("googleAnalyticsCreateCustomConfiguration");
					
                  out.write("\n\n\t\t\t\t\t");
                  //  c:choose
                  com.liferay.taglib.core.ChooseTag _jspx_th_c_005fchoose_005f4 = new com.liferay.taglib.core.ChooseTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fchoose_005f4);
                  try {
                    _jspx_th_c_005fchoose_005f4.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fchoose_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f10);
                    int _jspx_eval_c_005fchoose_005f4 = _jspx_th_c_005fchoose_005f4.doStartTag();
                    if (_jspx_eval_c_005fchoose_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n\t\t\t\t\t\t");
                      //  c:when
                      com.liferay.taglib.core.WhenTag _jspx_th_c_005fwhen_005f6 = new com.liferay.taglib.core.WhenTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fwhen_005f6);
                      try {
                        _jspx_th_c_005fwhen_005f6.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fwhen_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f4);
                        // /html/common/themes/top_js.jspf(482,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fwhen_005f6.setTest( Validator.isNotNull(googleAnalyticsCreateCustomConfiguration) );
                        int _jspx_eval_c_005fwhen_005f6 = _jspx_th_c_005fwhen_005f6.doStartTag();
                        if (_jspx_eval_c_005fwhen_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n\t\t\t\t\t\t\tga('create', '");
                          out.print( HtmlUtil.escapeJS(googleAnalyticsId) );
                          out.write("', 'auto', ");
                          out.print( googleAnalyticsCreateCustomConfiguration );
                          out.write(");\n\t\t\t\t\t\t");
                        }
                        if (_jspx_th_c_005fwhen_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f6, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n\t\t\t\t\t\t");
                      //  c:otherwise
                      com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = new com.liferay.taglib.core.OtherwiseTag();
                      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f1);
                      try {
                        _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f4);
                        int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
                        if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                          out.write("\n\t\t\t\t\t\t\tga('create', '");
                          out.print( HtmlUtil.escapeJS(googleAnalyticsId) );
                          out.write("', 'auto');\n\t\t\t\t\t\t");
                        }
                        if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                          return;
                        }
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), false);
                      }
                      out.write("\n\t\t\t\t\t");
                    }
                    if (_jspx_th_c_005fchoose_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f4, _jsp_getInstanceManager(), false);
                  }
                  out.write("\n\n\t\t\t\t\t");

					String googleAnalyticsCustomConfiguration = groupTypeSettings.getProperty("googleAnalyticsCustomConfiguration");
					
                  out.write("\n\n\t\t\t\t\t");
                  //  c:if
                  com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f11 = new com.liferay.taglib.core.IfTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f11);
                  try {
                    _jspx_th_c_005fif_005f11.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fif_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f10);
                    // /html/common/themes/top_js.jspf(494,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_c_005fif_005f11.setTest( Validator.isNotNull(googleAnalyticsCustomConfiguration) );
                    int _jspx_eval_c_005fif_005f11 = _jspx_th_c_005fif_005f11.doStartTag();
                    if (_jspx_eval_c_005fif_005f11 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n\t\t\t\t\t\t(function(ga) {\n\t\t\t\t\t\t\t");
                      out.print( googleAnalyticsCustomConfiguration );
                      out.write("\n\t\t\t\t\t\t})(ga);\n\t\t\t\t\t");
                    }
                    if (_jspx_th_c_005fif_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f11, _jsp_getInstanceManager(), false);
                  }
                  out.write("\n\n\t\t\t\t\tga('send', 'pageview');\n\n\t\t\t\t\t");
                  //  c:if
                  com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f12 = new com.liferay.taglib.core.IfTag();
                  _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f12);
                  try {
                    _jspx_th_c_005fif_005f12.setPageContext(_jspx_page_context);
                    _jspx_th_c_005fif_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f10);
                    // /html/common/themes/top_js.jspf(502,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_c_005fif_005f12.setTest( PropsValues.JAVASCRIPT_SINGLE_PAGE_APPLICATION_ENABLED );
                    int _jspx_eval_c_005fif_005f12 = _jspx_th_c_005fif_005f12.doStartTag();
                    if (_jspx_eval_c_005fif_005f12 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      out.write("\n\t\t\t\t\t\tLiferay.on(\n\t\t\t\t\t\t\t'endNavigate',\n\t\t\t\t\t\t\tfunction(event) {\n\t\t\t\t\t\t\t\tga('set', 'page', event.path);\n\t\t\t\t\t\t\t\tga('send', 'pageview');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t");
                    }
                    if (_jspx_th_c_005fif_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f12, _jsp_getInstanceManager(), false);
                  }
                  out.write("\n\t\t\t\t</script>\n\t\t\t");
                }
                if (_jspx_th_c_005fif_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f10, _jsp_getInstanceManager(), false);
              }
              out.write('\n');
              out.write('	');
              out.write('	');
            }
            if (_jspx_th_c_005fwhen_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f5, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('	');
          out.write('	');
          //  c:otherwise
          com.liferay.taglib.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = new com.liferay.taglib.core.OtherwiseTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fotherwise_005f2);
          try {
            _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
            _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
            int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
            if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\n\t\t\t");

			String analyticsScript = groupTypeSettings.getProperty(Sites.ANALYTICS_PREFIX + analyticsType);
			
              out.write("\n\n\t\t\t");
              //  c:if
              com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f13 = new com.liferay.taglib.core.IfTag();
              _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f13);
              try {
                _jspx_th_c_005fif_005f13.setPageContext(_jspx_page_context);
                _jspx_th_c_005fif_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f2);
                // /html/common/themes/top_js.jspf(520,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_c_005fif_005f13.setTest( Validator.isNotNull(analyticsScript) );
                int _jspx_eval_c_005fif_005f13 = _jspx_th_c_005fif_005f13.doStartTag();
                if (_jspx_eval_c_005fif_005f13 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  out.write("\n\t\t\t\t");
                  out.print( analyticsScript );
                  out.write("\n\t\t\t");
                }
                if (_jspx_th_c_005fif_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f13, _jsp_getInstanceManager(), false);
              }
              out.write('\n');
              out.write('	');
              out.write('	');
            }
            if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f2, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('	');
        }
        if (_jspx_th_c_005fchoose_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f3, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');

}

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f14 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f14);
      try {
        _jspx_th_c_005fif_005f14.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f14.setParent(null);
        // /html/common/themes/top_portlet_resources_js.jspf(17,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f14.setTest( (portlets != null) && !portlets.isEmpty() );
        int _jspx_eval_c_005fif_005f14 = _jspx_th_c_005fif_005f14.doStartTag();
        if (_jspx_eval_c_005fif_005f14 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('\n');
          out.write('	');

	PortletResourceAccessor[] portletResourceAccessors = {PortletResourceAccessor.HEADER_PORTAL_JAVASCRIPT, PortletResourceAccessor.HEADER_PORTLET_JAVASCRIPT};

	final ThemeDisplay finalThemeDisplay = themeDisplay;

	Predicate<String> predicate = resource -> !finalThemeDisplay.isIncludedJs(resource);

	boolean useComboServletStaticURLGenerator = themeDisplay.isThemeJsFastLoad();
	
          out.write('\n');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('\n');

List<String> urls = new ArrayList<String>();

          out.write('\n');
          out.write('\n');
          //  c:if
          com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f15 = new com.liferay.taglib.core.IfTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f15);
          try {
            _jspx_th_c_005fif_005f15.setPageContext(_jspx_page_context);
            _jspx_th_c_005fif_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f14);
            // /html/common/themes/portlet_resources.jspf(21,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fif_005f15.setTest( (portlets != null) && !portlets.isEmpty() );
            int _jspx_eval_c_005fif_005f15 = _jspx_th_c_005fif_005f15.doStartTag();
            if (_jspx_eval_c_005fif_005f15 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write('\n');
              out.write('\n');
              out.write('	');

	Set<String> portletResourceStaticURLs = (Set<String>)request.getAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS);

	if (portletResourceStaticURLs == null) {
		portletResourceStaticURLs = new LinkedHashSet<String>();

		request.setAttribute(WebKeys.PORTLET_RESOURCE_STATIC_URLS, portletResourceStaticURLs);
	}

	if (useComboServletStaticURLGenerator) {
		ComboServletStaticURLGenerator comboServletStaticURLGenerator = new ComboServletStaticURLGenerator();

		comboServletStaticURLGenerator.setPortletResourceAccessors(portletResourceAccessors);
		comboServletStaticURLGenerator.setPredicate(predicate);
		comboServletStaticURLGenerator.setTimestamp(theme.getTimestamp());
		comboServletStaticURLGenerator.setURLPrefix(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNDynamicResourcesHost() + themeDisplay.getPathContext() + "/combo", "minifierType=&themeId=" + themeDisplay.getThemeId(), -1));
		comboServletStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		urls.addAll(comboServletStaticURLGenerator.generate(portlets));
	}
	else {
		PortletResourceStaticURLGenerator portletResourceStaticURLGenerator = new PortletResourceStaticURLGenerator();

		portletResourceStaticURLGenerator.setRequest(request);
		portletResourceStaticURLGenerator.setVisitedURLs(portletResourceStaticURLs);

		for (Portlet curPortlet : portlets) {
			urls.addAll(portletResourceStaticURLGenerator.generate(curPortlet, portletResourceAccessors));
		}
	}
	
              out.write('\n');
              out.write('\n');
            }
            if (_jspx_th_c_005fif_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f15, _jsp_getInstanceManager(), false);
          }
          out.write('\n');
          out.write('\n');
          out.write('	');

	for (String url : urls) {
	
          out.write("\n\n\t\t<script data-senna-track=\"temporary\" src=\"");
          out.print( HtmlUtil.escapeAttribute(url) );
          out.write("\" type=\"text/javascript\"></script>\n\n\t");

	}
	
          out.write('\n');
          out.write('\n');
        }
        if (_jspx_th_c_005fif_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f14, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

List<String> markupHeaders = (List<String>)request.getAttribute(MimeResponse.MARKUP_HEAD_ELEMENT);

      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f16 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f16);
      try {
        _jspx_th_c_005fif_005f16.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f16.setParent(null);
        // /html/common/themes/top_head.jsp(116,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f16.setTest( markupHeaders != null );
        int _jspx_eval_c_005fif_005f16 = _jspx_th_c_005fif_005f16.doStartTag();
        if (_jspx_eval_c_005fif_005f16 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('\n');
          out.write('	');

	for (String markupHeader : markupHeaders) {
	
          out.write("\n\n\t\t");
          out.print( markupHeader );
          out.write('\n');
          out.write('\n');
          out.write('	');

	}
	
          out.write('\n');
          out.write('\n');
        }
        if (_jspx_th_c_005fif_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f16, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');

com.liferay.petra.string.StringBundler pageTopSB = OutputTag.getDataSB(request, WebKeys.PAGE_TOP);

      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f17 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f17);
      try {
        _jspx_th_c_005fif_005f17.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f17.setParent(null);
        // /html/common/themes/top_head.jsp(134,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f17.setTest( pageTopSB != null );
        int _jspx_eval_c_005fif_005f17 = _jspx_th_c_005fif_005f17.doStartTag();
        if (_jspx_eval_c_005fif_005f17 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write('\n');
          out.write('\n');
          out.write('	');

	pageTopSB.writeTo(out);
	
          out.write('\n');
          out.write('\n');
        }
        if (_jspx_th_c_005fif_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f17, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');

boolean portletHubRequired = false;

for (Portlet portlet : portlets) {
	for (PortletDependency portletDependency : portlet.getPortletDependencies()) {
		if (Objects.equals(portletDependency.getName(), "PortletHub") && Objects.equals(portletDependency.getScope(), "javax.portlet")) {
			portletHubRequired = true;

			break;
		}
	}

	if (portletHubRequired) {
		break;
	}
}

      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f18 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f18);
      try {
        _jspx_th_c_005fif_005f18.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f18.setParent(null);
        // /html/common/themes/top_head.jsp(160,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f18.setTest( portletHubRequired );
        int _jspx_eval_c_005fif_005f18 = _jspx_th_c_005fif_005f18.doStartTag();
        if (_jspx_eval_c_005fif_005f18 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t<script type=\"text/javascript\">\n\t\tvar portlet = portlet || {};\n\n\t\tportlet.data = portlet.data || {};\n\n\t\tportlet.data.pageRenderState = ");
          out.print( RenderStateUtil.generateJSON(request, themeDisplay) );
          out.write(";\n\t</script>\n");
        }
        if (_jspx_th_c_005fif_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f18, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      out.write("\n\n<link class=\"lfr-css-file\" data-senna-track=\"temporary\" href=\"");
      out.print( HtmlUtil.escapeAttribute(PortalUtil.getStaticResourceURL(request, themeDisplay.getPathThemeCss() + "/main.css")) );
      out.write("\" id=\"liferayThemeCSS\" rel=\"stylesheet\" type=\"text/css\" />\n\n");
      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f19 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f19);
      try {
        _jspx_th_c_005fif_005f19.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f19.setParent(null);
        // /html/common/themes/top_head.jsp(176,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f19.setTest( (layout != null) && Validator.isNotNull(layout.getCssText()) );
        int _jspx_eval_c_005fif_005f19 = _jspx_th_c_005fif_005f19.doStartTag();
        if (_jspx_eval_c_005fif_005f19 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t<style data-senna-track=\"temporary\" type=\"text/css\">\n\t\t");
          out.print( _escapeCssBlock(layout.getCssText()) );
          out.write("\n\t</style>\n");
        }
        if (_jspx_th_c_005fif_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f19, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f20 = new com.liferay.taglib.core.IfTag();
      _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f20);
      try {
        _jspx_th_c_005fif_005f20.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f20.setParent(null);
        // /html/common/themes/top_head.jsp(184,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f20.setTest( portlets != null );
        int _jspx_eval_c_005fif_005f20 = _jspx_th_c_005fif_005f20.doStartTag();
        if (_jspx_eval_c_005fif_005f20 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n\t<style data-senna-track=\"temporary\" type=\"text/css\">\n\n\t\t");

		for (Portlet portlet : portlets) {
			PortletPreferences portletSetup = themeDisplay.getStrictLayoutPortletSetup(layout, portlet.getPortletId());

			String portletSetupCss = portletSetup.getValue("portletSetupCss", StringPool.BLANK);
		
          out.write("\n\n\t\t\t");
          //  c:if
          com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f21 = new com.liferay.taglib.core.IfTag();
          _jsp_getInstanceManager().newInstance(_jspx_th_c_005fif_005f21);
          try {
            _jspx_th_c_005fif_005f21.setPageContext(_jspx_page_context);
            _jspx_th_c_005fif_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f20);
            // /html/common/themes/top_head.jsp(194,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
            _jspx_th_c_005fif_005f21.setTest( Validator.isNotNull(portletSetupCss) );
            int _jspx_eval_c_005fif_005f21 = _jspx_th_c_005fif_005f21.doStartTag();
            if (_jspx_eval_c_005fif_005f21 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
              out.write("\n\n\t\t\t\t");

				try {
				
              out.write("\n\n\t\t\t\t\t");
              out.write('\n');
              out.write('\n');

JSONObject jsonObject = PortletSetupUtil.cssToJSONObject(portletSetup, portletSetupCss);

List<String> finalCSS = new ArrayList<>();

// Background data

JSONObject bgData = jsonObject.getJSONObject("bgData");

String bgColor = bgData.getString("backgroundColor");
String bgImage = bgData.getString("backgroundImage");

JSONObject bgPos = bgData.getJSONObject("backgroundPosition");

JSONObject bgPosLeft = bgPos.getJSONObject(_LEFT_KEY);
JSONObject bgPosTop = bgPos.getJSONObject(_TOP_KEY);

String bgPosLeftValue = bgPosLeft.getString(_VALUE_KEY) + bgPosLeft.getString(_UNIT_KEY);
String bgPosTopValue = bgPosTop.getString(_VALUE_KEY) + bgPosTop.getString(_UNIT_KEY);

String bgPosValue = bgPosLeftValue + " " + bgPosTopValue;

boolean useBgImage = bgData.getBoolean("useBgImage");

if (Validator.isNotNull(bgColor)) {
	finalCSS.add("background-color: " + bgColor);
}

if (Validator.isNotNull(bgImage)) {
	finalCSS.add("background-image: url(" + bgImage + ")");
}

if (useBgImage) {
	finalCSS.add("background-position: " + bgPosValue);
}

// Border data

JSONObject borderData = jsonObject.getJSONObject("borderData");

JSONObject borderWidth = borderData.getJSONObject("borderWidth");
JSONObject borderStyle = borderData.getJSONObject("borderStyle");
JSONObject borderColor = borderData.getJSONObject("borderColor");

boolean ufaBorderWidth = borderWidth.getBoolean(_SAME_FOR_ALL_KEY);
boolean ufaBorderStyle = borderStyle.getBoolean(_SAME_FOR_ALL_KEY);
boolean ufaBorderColor = borderColor.getBoolean(_SAME_FOR_ALL_KEY);

// Width

JSONObject borderWidthTop = borderWidth.getJSONObject(_TOP_KEY);
JSONObject borderWidthRight = borderWidth.getJSONObject(_RIGHT_KEY);
JSONObject borderWidthBottom = borderWidth.getJSONObject(_BOTTOM_KEY);
JSONObject borderWidthLeft = borderWidth.getJSONObject(_LEFT_KEY);

String borderTopWidthValue = borderWidthTop.getString(_VALUE_KEY) + borderWidthTop.getString(_UNIT_KEY);
String borderRightWidthValue = borderWidthRight.getString(_VALUE_KEY) + borderWidthRight.getString(_UNIT_KEY);
String borderBottomWidthValue = borderWidthBottom.getString(_VALUE_KEY) + borderWidthBottom.getString(_UNIT_KEY);
String borderLeftWidthValue = borderWidthLeft.getString(_VALUE_KEY) + borderWidthLeft.getString(_UNIT_KEY);

// Style

String borderTopStyleValue = borderStyle.getString(_TOP_KEY);
String borderRightStyleValue = borderStyle.getString(_RIGHT_KEY);
String borderBottomStyleValue = borderStyle.getString(_BOTTOM_KEY);
String borderLeftStyleValue = borderStyle.getString(_LEFT_KEY);

// Color

String borderTopColorValue = borderColor.getString(_TOP_KEY);
String borderRightColorValue = borderColor.getString(_RIGHT_KEY);
String borderBottomColorValue = borderColor.getString(_BOTTOM_KEY);
String borderLeftColorValue = borderColor.getString(_LEFT_KEY);

if (ufaBorderWidth) {
	if (!_unitSet.contains(borderTopWidthValue)) {
		finalCSS.add("border-width: " + borderTopWidthValue);
	}
}
else {
	if (!_unitSet.contains(borderTopWidthValue)) {
		finalCSS.add("border-top-width: " + borderTopWidthValue);
	}

	if (!_unitSet.contains(borderRightWidthValue)) {
		finalCSS.add("border-right-width: " + borderRightWidthValue);
	}

	if (!_unitSet.contains(borderBottomWidthValue)) {
		finalCSS.add("border-bottom-width: " + borderBottomWidthValue);
	}

	if (!_unitSet.contains(borderLeftWidthValue)) {
		finalCSS.add("border-left-width: " + borderLeftWidthValue);
	}
}

if (ufaBorderStyle) {
	if (Validator.isNotNull(borderTopStyleValue)) {
		finalCSS.add("border-style: " + borderTopStyleValue);
	}
}
else {
	if (Validator.isNotNull(borderTopStyleValue)) {
		finalCSS.add("border-top-style: " + borderTopStyleValue);
	}

	if (Validator.isNotNull(borderRightStyleValue)) {
		finalCSS.add("border-right-style: " + borderRightStyleValue);
	}

	if (Validator.isNotNull(borderBottomStyleValue)) {
		finalCSS.add("border-bottom-style: " + borderBottomStyleValue);
	}

	if (Validator.isNotNull(borderLeftStyleValue)) {
		finalCSS.add("border-left-style: " + borderLeftStyleValue);
	}
}

if (ufaBorderColor) {
	if (Validator.isNotNull(borderTopColorValue)) {
		finalCSS.add("border-color: " + borderTopColorValue);
	}
}
else {
	if (Validator.isNotNull(borderTopColorValue)) {
		finalCSS.add("border-top-color: " + borderTopColorValue);
	}

	if (Validator.isNotNull(borderRightColorValue)) {
		finalCSS.add("border-right-color: " + borderRightColorValue);
	}

	if (Validator.isNotNull(borderBottomColorValue)) {
		finalCSS.add("border-bottom-color: " + borderBottomColorValue);
	}

	if (Validator.isNotNull(borderLeftColorValue)) {
		finalCSS.add("border-left-color: " + borderLeftColorValue);
	}
}

// Spacing data

JSONObject spacingData = jsonObject.getJSONObject("spacingData");

JSONObject margin = spacingData.getJSONObject("margin");
JSONObject padding = spacingData.getJSONObject("padding");

boolean ufaMargin = margin.getBoolean(_SAME_FOR_ALL_KEY);
boolean ufaPadding = padding.getBoolean(_SAME_FOR_ALL_KEY);

// Margin

JSONObject marginTop = margin.getJSONObject(_TOP_KEY);
JSONObject marginRight = margin.getJSONObject(_RIGHT_KEY);
JSONObject marginBottom = margin.getJSONObject(_BOTTOM_KEY);
JSONObject marginLeft = margin.getJSONObject(_LEFT_KEY);

String marginTopValue = marginTop.getString(_VALUE_KEY) + marginTop.getString(_UNIT_KEY);
String marginRightValue = marginRight.getString(_VALUE_KEY) + marginRight.getString(_UNIT_KEY);
String marginBottomValue = marginBottom.getString(_VALUE_KEY) + marginBottom.getString(_UNIT_KEY);
String marginLeftValue = marginLeft.getString(_VALUE_KEY) + marginLeft.getString(_UNIT_KEY);

if (ufaMargin) {
	if (!_unitSet.contains(marginTopValue)) {
		finalCSS.add("margin: " + marginTopValue);
	}
}
else {
	if (!_unitSet.contains(marginTopValue)) {
		finalCSS.add("margin-top: " + marginTopValue);
	}

	if (!_unitSet.contains(marginRightValue)) {
		finalCSS.add("margin-right: " + marginRightValue);
	}

	if (!_unitSet.contains(marginBottomValue)) {
		finalCSS.add("margin-bottom: " + marginBottomValue);
	}

	if (!_unitSet.contains(marginLeftValue)) {
		finalCSS.add("margin-left: " + marginLeftValue);
	}
}

// Padding

JSONObject paddingTop = padding.getJSONObject(_TOP_KEY);
JSONObject paddingRight = padding.getJSONObject(_RIGHT_KEY);
JSONObject paddingBottom = padding.getJSONObject(_BOTTOM_KEY);
JSONObject paddingLeft = padding.getJSONObject(_LEFT_KEY);

String paddingTopValue = paddingTop.getString(_VALUE_KEY) + paddingTop.getString(_UNIT_KEY);
String paddingRightValue = paddingRight.getString(_VALUE_KEY) + paddingRight.getString(_UNIT_KEY);
String paddingBottomValue = paddingBottom.getString(_VALUE_KEY) + paddingBottom.getString(_UNIT_KEY);
String paddingLeftValue = paddingLeft.getString(_VALUE_KEY) + paddingLeft.getString(_UNIT_KEY);

if (ufaPadding) {
	if (!_unitSet.contains(paddingTopValue)) {
		finalCSS.add("padding: " + paddingTopValue);
	}
}
else {
	if (!_unitSet.contains(paddingTopValue)) {
		finalCSS.add("padding-top: " + paddingTopValue);
	}

	if (!_unitSet.contains(paddingRightValue)) {
		finalCSS.add("padding-right: " + paddingRightValue);
	}

	if (!_unitSet.contains(paddingBottomValue)) {
		finalCSS.add("padding-bottom: " + paddingBottomValue);
	}

	if (!_unitSet.contains(paddingLeftValue)) {
		finalCSS.add("padding-left: " + paddingLeftValue);
	}
}

// Text data

JSONObject textData = jsonObject.getJSONObject("textData");

String color = textData.getString("color");
String fontFamily = textData.getString("fontFamily");
String fontSize = textData.getString("fontSize");
String fontStyle = textData.getString("fontStyle");
String fontWeight = textData.getString("fontWeight");
String letterSpacing = textData.getString("letterSpacing");
String lineHeight = textData.getString("lineHeight");
String textAlign = textData.getString("textAlign");
String textDecoration = textData.getString("textDecoration");
String wordSpacing = textData.getString("wordSpacing");

if (Validator.isNotNull(color)) {
	finalCSS.add("color: " + color);
}

if (Validator.isNotNull(fontFamily)) {
	finalCSS.add("font-family: '" + fontFamily + "'");
}

if (Validator.isNotNull(fontSize)) {
	finalCSS.add("font-size: " + fontSize);
}

if (Validator.isNotNull(fontStyle)) {
	finalCSS.add("font-style: " + fontStyle);
}

if (Validator.isNotNull(fontWeight)) {
	finalCSS.add("font-weight: " + fontWeight);
}

if (Validator.isNotNull(letterSpacing)) {
	finalCSS.add("letter-spacing: " + letterSpacing);
}

if (Validator.isNotNull(lineHeight)) {
	finalCSS.add("line-height: " + lineHeight);
}

if (Validator.isNotNull(textAlign)) {
	finalCSS.add("text-align: " + textAlign);
}

if (Validator.isNotNull(textDecoration)) {
	finalCSS.add("text-decoration: " + textDecoration);
}

if (Validator.isNotNull(wordSpacing)) {
	finalCSS.add("word-spacing: " + wordSpacing);
}

// Advanced styling

JSONObject advancedData = jsonObject.getJSONObject("advancedData");

String customCSS = advancedData.getString("customCSS");

// Generated CSS

out.print("#p_p_id_" + portlet.getPortletId() + "_ .portlet-content");

out.print(" {\n");

String[] finalCSSArray = finalCSS.toArray(new String[0]);

String finalCSSString = StringUtil.merge(finalCSSArray, ";\n");

out.print(_escapeCssBlock(finalCSSString));

out.print("\n}\n");

// Advanced CSS

if (Validator.isNotNull(customCSS)) {
	out.print(_escapeCssBlock(customCSS));
}

              out.write('\n');
              out.write('\n');
              out.write("\n\n\t\t\t\t");

				}
				catch (Exception e) {
					if (_log.isWarnEnabled()) {
						_log.warn(e.getMessage());
					}
				}
				
              out.write("\n\n\t\t\t");
            }
            if (_jspx_th_c_005fif_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
              return;
            }
          } finally {
            org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f21, _jsp_getInstanceManager(), false);
          }
          out.write("\n\n\t\t");

		}
		
          out.write("\n\n\t</style>\n");
        }
        if (_jspx_th_c_005fif_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f20, _jsp_getInstanceManager(), false);
      }
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f2(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_liferay_002dtheme_005fmeta_002dtags_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-theme:meta-tags
    com.liferay.taglib.theme.MetaTagsTag _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0 = new com.liferay.taglib.theme.MetaTagsTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0);
    try {
      _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.setParent(null);
      int _jspx_eval_liferay_002dtheme_005fmeta_002dtags_005f0 = _jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.doStartTag();
      if (_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dtheme_005fmeta_002dtags_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setParent(null);
      // /html/common/themes/top_head.jsp(21,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.setKey("/html/common/themes/top_head.jsp#pre");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f0 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f0 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f0);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
      // /html/common/themes/top_js.jspf(119,92) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f0.setKey("updates-are-available-for-liferay");
      int _jspx_eval_liferay_002dui_005fmessage_005f0 = _jspx_th_liferay_002dui_005fmessage_005f0.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f0, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dui_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-ui:message
    com.liferay.taglib.ui.MessageTag _jspx_th_liferay_002dui_005fmessage_005f1 = new com.liferay.taglib.ui.MessageTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dui_005fmessage_005f1);
    try {
      _jspx_th_liferay_002dui_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dui_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f5);
      // /html/common/themes/top_js.jspf(125,13) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dui_005fmessage_005f1.setKey("maintenance-alert");
      int _jspx_eval_liferay_002dui_005fmessage_005f1 = _jspx_th_liferay_002dui_005fmessage_005f1.doStartTag();
      if (_jspx_th_liferay_002dui_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dui_005fmessage_005f1, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setParent(null);
      // /html/common/themes/top_js.jspf(402,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.setKey("/html/common/themes/top_js.jspf#resources");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f1 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f1, _jsp_getInstanceManager(), false);
    }
    return false;
  }

  private boolean _jspx_meth_liferay_002dutil_005fdynamic_002dinclude_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:dynamic-include
    com.liferay.taglib.util.DynamicIncludeTag _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2 = new com.liferay.taglib.util.DynamicIncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2);
    try {
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setParent(null);
      // /html/common/themes/top_head.jsp(220,0) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.setKey("/html/common/themes/top_head.jsp#post");
      int _jspx_eval_liferay_002dutil_005fdynamic_002dinclude_005f2 = _jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.doStartTag();
      if (_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_liferay_002dutil_005fdynamic_002dinclude_005f2, _jsp_getInstanceManager(), false);
    }
    return false;
  }
}
